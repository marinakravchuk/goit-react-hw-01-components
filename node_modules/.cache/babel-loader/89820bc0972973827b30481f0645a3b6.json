{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marina.kravchuk\\\\Documents\\\\GitHub\\\\Goit\\\\React\\\\src\\\\components\\\\FriendList\\\\FriendList.jsx\";\nimport PropTypes from 'prop-types';\nimport { StyledFriendList, IsOnlineMarker, ItemFriend, Avatar, Username } from 'components/FriendList/Friendlist.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FriendList(_ref) {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(StyledFriendList, {\n    children: friends.map(_ref2 => {\n      let {\n        avatar,\n        isOnline,\n        name,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(ItemFriend, {\n        children: [/*#__PURE__*/_jsxDEV(IsOnlineMarker, {\n          color: isOnline ? 'green' : 'red'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          src: avatar,\n          alt: \"User avatar\",\n          width: \"48\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Username, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    avatar: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool,\n    id: PropTypes.number.isRequired\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["C:/Users/marina.kravchuk/Documents/GitHub/Goit/React/src/components/FriendList/FriendList.jsx"],"names":["PropTypes","StyledFriendList","IsOnlineMarker","ItemFriend","Avatar","Username","FriendList","friends","map","avatar","isOnline","name","id","propTypes","arrayOf","shape","string","isRequired","bool","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,SACEC,gBADF,EAEEC,cAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,QALF,QAMO,yCANP;;AAQA,eAAe,SAASC,UAAT,OAAiC;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC9C,sBACE,QAAC,gBAAD;AAAA,cACGA,OAAO,CAACC,GAAR,CAAY,SAAoC;AAAA,UAAnC;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,QAAV;AAAoBC,QAAAA,IAApB;AAA0BC,QAAAA;AAA1B,OAAmC;AAC/C,0BACE,QAAC,UAAD;AAAA,gCACG,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAEF,QAAQ,GAAG,OAAH,GAAa;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADH,eAEE,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAED,MAAb;AAAqB,UAAA,GAAG,EAAC,aAAzB;AAAuC,UAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,QAAD;AAAA,oBAAWE;AAAX;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAiBC,EAAjB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAduBN,U;AAgBxBA,UAAU,CAACO,SAAX,GAAuB;AACrBN,EAAAA,OAAO,EAAEP,SAAS,CAACc,OAAV,CACPd,SAAS,CAACe,KAAV,CAAgB;AACdN,IAAAA,MAAM,EAAET,SAAS,CAACgB,MADJ;AAEdL,IAAAA,IAAI,EAAEX,SAAS,CAACgB,MAAV,CAAiBC,UAFT;AAGdP,IAAAA,QAAQ,EAAEV,SAAS,CAACkB,IAHN;AAIdN,IAAAA,EAAE,EAAEZ,SAAS,CAACmB,MAAV,CAAiBF;AAJP,GAAhB,CADO,EAOPA;AARmB,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\n\nimport {\n  StyledFriendList,\n  IsOnlineMarker,\n  ItemFriend,\n  Avatar,\n  Username,\n} from 'components/FriendList/Friendlist.styled';\n\nexport default function FriendList({ friends }) {\n  return (\n    <StyledFriendList>\n      {friends.map(({ avatar, isOnline, name, id }) => {\n        return (\n          <ItemFriend key={id}>\n            {<IsOnlineMarker color={isOnline ? 'green' : 'red'} />}\n            <Avatar src={avatar} alt=\"User avatar\" width=\"48\" />\n            <Username>{name}</Username>\n          </ItemFriend>\n        );\n      })}\n    </StyledFriendList>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}